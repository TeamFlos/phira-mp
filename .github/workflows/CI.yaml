name: release
on:
  push:
    branches: [ '*' ]
    tags: [ 'v*' ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]

    steps:
      - uses: actions/checkout@v4

      - name: Write Cross.toml
        run: |
          cat > Cross.toml <<'EOF'
          [target.x86_64-unknown-linux-gnu]
          pre-build = [
              "dpkg --add-architecture $CROSS_DEB_ARCH",
              "apt-get update && apt-get install --assume-yes pkg-config libssl-dev:$CROSS_DEB_ARCH"
          ]
          [target.aarch64-unknown-linux-gnu]
          pre-build = [
              "dpkg --add-architecture $CROSS_DEB_ARCH",
              "apt-get update && apt-get install --assume-yes pkg-config libssl-dev:$CROSS_DEB_ARCH"
          ]
          EOF

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build ${{ matrix.target }}
        run: cross build --release --workspace --target ${{ matrix.target }}

      - name: Package binary
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/phira-mp-server dist/phira-mp-server-${{ matrix.target }}
          tar -czf dist/phira-mp-server-${{ matrix.target }}.tar.gz -C dist phira-mp-server-${{ matrix.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.target }}
          path: dist/phira-mp-server-${{ matrix.target }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') 

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: binaries-*
          merge-multiple: true
          path: dist

      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          files: dist/*.tar.gz
