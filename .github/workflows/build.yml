name: Cross-Compile and Release

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release Tag'
        required: false
        default: 'v1.0.0'

jobs:
  build:
    name: Cross-Compile for Multiple Platforms
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [windows, linux, freebsd, aarch64]
        include:
          - os: windows
            target: x86_64-pc-windows-msvc
            artifact_name: phira-mp-server-windows-amd64.exe
          - os: linux
            target: x86_64-unknown-linux-gnu
            artifact_name: phira-mp-server-linux-amd64
          - os: freebsd
            target: x86_64-unknown-freebsd
            artifact_name: phira-mp-server-freebsd-amd64
          - os: aarch64
            target: aarch64-unknown-linux-gnu
            artifact_name: phira-mp-server-aarch64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust environment
        run: |
          sh <(curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf) -y
          source $HOME/.cargo/env

      - name: Install QEMU for aarch64
        if: matrix.os == 'aarch64'
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static

      - name: Build project for ${{ matrix.os }}
        run: |
          if [ "${{ matrix.os }}" == "aarch64" ]; then
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
            cargo build --release -p phira-mp-server --target ${{ matrix.target }}
          else
            cargo build --release -p phira-mp-server --target ${{ matrix.target }}
          fi

      - name: Archive build artifact
        run: |
          mkdir -p build_output/${{ matrix.os }}-amd64
          # Ensure correct renaming for aarch64
          if [ "${{ matrix.os }}" == "aarch64" ]; then
            mv target/${{ matrix.target }}/release/phira-mp-server build_output/${{ matrix.os }}-amd64/phira-mp-server-aarch64
          else
            mv target/${{ matrix.target }}/release/phira-mp-server build_output/${{ matrix.os }}-amd64/${{ matrix.artifact_name }}
          fi

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-artifact
          path: build_output/${{ matrix.os }}-amd64/${{ matrix.artifact_name }}


  publish:
    permissions: write-all
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.release_tag }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin/
          merge-multiple: true

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.release_tag }}
          files: bin/*
          prerelease: false
