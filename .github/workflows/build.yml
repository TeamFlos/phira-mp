name: Cross-Compile Rust Project

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Tag name of release"
        required: true

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x86_64-unknown-linux-gnu, i686-unknown-linux-gnu, armv5-unknown-linux-gnueabi, armv6-unknown-linux-gnueabi, armv7-unknown-linux-gnueabihf, aarch64-unknown-linux-gnu, riscv64-unknown-linux-gnu, mips64-unknown-linux-gnuabi64, mips64le-unknown-linux-gnuabi64, mipsel-unknown-linux-gnu, mips-unknown-linux-gnu, loongarch64-unknown-linux-gnu, s390x-unknown-linux-gnu, x86_64-pc-windows-msvc, i686-pc-windows-msvc, armv7-pc-windows-msvc, aarch64-pc-windows-msvc, aarch64-unknown-freebsd, aarch64-linux-android]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Clone phira-mp repository
        run: git clone https://github.com/TeamFlos/phira-mp

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.arch }}

      - name: Build phira-mp
        run: |
          cd phira-mp
          cargo build --release -p phira-mp-server --target=${{ matrix.arch }}

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: rust-project-${{ matrix.os }}-${{ matrix.arch }}
          path: phira-mp/target/release/phira-mp-server

  publish:
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: rust-project
          path: ./artifacts

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          files: ./artifacts/*
          prerelease: false
