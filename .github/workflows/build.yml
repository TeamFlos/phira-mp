name: Build and Release phira-mp

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: amd64
            target: x86_64-unknown-linux-gnu
            binary: phira-mp-server
            artifact: phira-mp-server-linux-amd64
          - os: ubuntu-latest
            arch: arm64
            target: aarch64-unknown-linux-gnu
            binary: phira-mp-server
            artifact: phira-mp-server-linux-arm64
          - os: windows-latest
            arch: amd64
            target: x86_64-pc-windows-msvc
            binary: phira-mp-server.exe
            artifact: phira-mp-server-windows-amd64.exe
          - os: macos-latest
            arch: amd64
            target: x86_64-apple-darwin
            binary: phira-mp-server
            artifact: phira-mp-server-macos-amd64
          - os: macos-latest
            arch: arm64
            target: aarch64-apple-darwin
            binary: phira-mp-server
            artifact: phira-mp-server-macos-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clone phira-mp repository
        run: git clone https://github.com/TeamFlos/phira-mp

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation dependencies (Linux ARM64)
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: Build phira-mp
        run: |
          cd phira-mp
          cargo build --release -p phira-mp-server --target ${{ matrix.target }}
        env:
          CARGO_TARGET_DIR: target

      - name: Prepare artifact
        shell: bash
        run: |
          cd phira-mp
          cp "target/${{ matrix.target }}/release/${{ matrix.binary }}" "../${{ matrix.artifact }}"
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            strip "../${{ matrix.artifact }}" || true
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}

  create_release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag }}
          name: "Release ${{ github.event.inputs.tag }}"
          files: artifacts/*
          prerelease: false
