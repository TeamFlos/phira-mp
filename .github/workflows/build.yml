name: Rust Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Tag name of release"
        required: true

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, freebsd-latest]
        arch: [amd64, arm64, arm, 386, riscv64, mips64, mips64le, mipsle, mips, s390x, loong64]
        include:
          # Include specific combinations
          - os: ubuntu-latest
            arch: arm
            goarm: 7
          - os: ubuntu-latest
            arch: arm
            goarm: 6
          - os: ubuntu-latest
            arch: arm
            goarm: 5
          - os: windows-latest
            arch: arm64
          - os: macos-latest
            arch: arm64

    runs-on: ${{ matrix.os }}
    env:
      CARGO_TARGET_DIR: target
      BUILD_NAME: phira-mp-server-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions/setup-rust@v1
        with:
          toolchain: stable

      - name: Build
        run: |
          cargo build --release -p phira-mp-server
          mv target/release/phira-mp-server $BUILD_NAME

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: $BUILD_NAME
          path: $BUILD_NAME

  Publish:
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin/
          merge-multiple: true

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          files: bin/*
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
