name: Cross-Compile and Release

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release Tag'
        required: false
        default: 'v1.0.0'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - windows/amd64
          - windows/arm64
          - linux/amd64
          - linux/arm64
          - macos/amd64
          - macos/arm64
          - freebsd/amd64  # 只构建FreeBSD的AMD64版本
    name: Build for ${{ matrix.platform }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies (for FreeBSD only)
        if: matrix.platform == 'freebsd/amd64'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev
          
      - name: Install cross (for FreeBSD only)
        if: matrix.platform == 'freebsd/amd64'
        run: |
          cargo install cross
          
      - name: Build project for ${{ matrix.platform }}
        run: |
          if [[ "${{ matrix.platform }}" == "freebsd/amd64" ]]; then
            # For FreeBSD, use cross for building (only AMD64)
            cross build --release -p phira-mp-server --target x86_64-unknown-freebsd
          else
            # For other platforms (Windows, Linux, macOS), use native cargo build
            cargo build --release -p phira-mp-server
          fi

      - name: Archive build artifact
        run: |
          mkdir -p build_output/${{ matrix.platform }}
          if [[ "${{ matrix.platform }}" == "freebsd/amd64" ]]; then
            # For FreeBSD, copy the artifact from the cross target directory
            cp target/x86_64-unknown-freebsd/release/phira-mp-server build_output/${{ matrix.platform }}/
          else
            # For other platforms, copy from the default release directory
            cp target/release/phira-mp-server build_output/${{ matrix.platform }}/
          fi

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up GitHub release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.release_tag }}  # 使用手动输入的 release tag
          release_name: "Release ${{ github.event.inputs.release_tag }}"
          body: |
            Release of version ${{ github.event.inputs.release_tag }}

      - name: Rename and archive build artifacts
        run: |
          for platform in windows/amd64 windows/arm64 linux/amd64 linux/arm64 macos/amd64 macos/arm64 freebsd/amd64; do
            artifact="build_output/${platform}/phira-mp-server"
            if [[ -f "$artifact" ]]; then
              # Rename the artifact with proper naming convention
              tar -czf build_output/${platform}/phira-mp-server-${platform}.tar.gz -C build_output/${platform} phira-mp-server
            fi
          done

      - name: Upload build artifacts to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build_output/windows/amd64/phira-mp-server-windows-amd64.tar.gz
            build_output/windows/arm64/phira-mp-server-windows-arm64.tar.gz
            build_output/linux/amd64/phira-mp-server-linux-amd64.tar.gz
            build_output/linux/arm64/phira-mp-server-linux-arm64.tar.gz
            build_output/macos/amd64/phira-mp-server-macos-amd64.tar.gz
            build_output/macos/arm64/phira-mp-server-macos-arm64.tar.gz
            build_output/freebsd/amd64/phira-mp-server-freebsd-amd64.tar.gz
