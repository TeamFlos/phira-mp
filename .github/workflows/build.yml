name: Cross-Compile and Release

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release Tag'
        required: false
        default: 'v1.0.0'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - windows-amd64
          - windows-arm64
          - linux-amd64
          - linux-arm64
          - macos-amd64
          - macos-arm64
          - freebsd-amd64  # 只构建FreeBSD的AMD64版本
    name: Build for ${{ matrix.platform }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies (for FreeBSD only)
        if: matrix.platform == 'freebsd-amd64'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev
          
      - name: Install cross (for FreeBSD only)
        if: matrix.platform == 'freebsd-amd64'
        run: |
          cargo install cross
          
      - name: Build project for ${{ matrix.platform }}
        run: |
          if [[ "${{ matrix.platform }}" == "freebsd-amd64" ]]; then
            # For FreeBSD, use cross for building (only AMD64)
            cross build --release -p phira-mp-server --target x86_64-unknown-freebsd
          else
            # For other platforms (Windows, Linux, macOS), use native cargo build
            cargo build --release -p phira-mp-server
          fi

      - name: Archive build artifact
        run: |
          mkdir -p build_output/${{ matrix.platform }}
          if [[ "${{ matrix.platform }}" == "freebsd-amd64" ]]; then
            # For FreeBSD, copy the artifact from the cross target directory
            cp target/x86_64-unknown-freebsd/release/phira-mp-server build_output/${{ matrix.platform }}/
          else
            # For other platforms, copy from the default release directory
            cp target/release/phira-mp-server build_output/${{ matrix.platform }}/
          fi

      - name: Rename Artifact
        run: |
          mv build_output/${{ matrix.platform }}/phira-mp-server build_output/${{ matrix.platform }}/phira-mp-server-${{ matrix.platform }}.exe

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-artifact
          path: build_output/${{ matrix.platform }}/phira-mp-server-${{ matrix.platform }}.exe

  publish:
    permissions: write-all
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.release_tag }}
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin/
          merge-multiple: true

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        if: ${{ success() }}
        with:
          tag_name: ${{ github.event.inputs.release_tag }}
          files: bin/*
          prerelease: false
