name: Cross-Compile and Release

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release Tag (required)'
        required: true  # 确保填写Tag
        default: 'v1.0.0'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - windows/amd64
          - windows/arm64
          - linux/amd64
          - linux/arm64
          - macos/amd64
          - macos/arm64
          - freebsd/amd64  # 只构建FreeBSD的AMD64版本
    name: Build for ${{ matrix.platform }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies (for FreeBSD only)
        if: matrix.platform == 'freebsd/amd64'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Install cross (for FreeBSD only)
        if: matrix.platform == 'freebsd/amd64'
        run: |
          cargo install cross
          
      - name: Build project for ${{ matrix.platform }}
        run: |
          if [[ "${{ matrix.platform }}" == "freebsd/amd64" ]]; then
            # For FreeBSD, use cross for building (only AMD64)
            cross build --release -p phira-mp-server --target x86_64-unknown-freebsd
          else
            # For other platforms (Windows, Linux, macOS), use native cargo build
            cargo build --release -p phira-mp-server
          fi

      - name: Check if build output exists
        run: |
          echo "Checking build output..."
          ls target/release
          ls target/x86_64-unknown-freebsd/release || true  # for FreeBSD

      - name: Rename build artifact for ${{ matrix.platform }}
        run: |
          mkdir -p build_output/${{ matrix.platform }}
          if [[ "${{ matrix.platform }}" == "freebsd/amd64" ]]; then
            # For FreeBSD, rename the artifact
            if [[ -f target/x86_64-unknown-freebsd/release/phira-mp-server ]]; then
              mv target/x86_64-unknown-freebsd/release/phira-mp-server build_output/${{ matrix.platform }}/phira-mp-server-freebsd-amd64
            else
              echo "FreeBSD build artifact not found"
            fi
          elif [[ "${{ matrix.platform }}" == "windows/amd64" || "${{ matrix.platform }}" == "windows/arm64" ]]; then
            # For Windows, rename with .exe extension
            if [[ -f target/release/phira-mp-server.exe ]]; then
              mv target/release/phira-mp-server.exe build_output/${{ matrix.platform }}/phira-mp-server-windows-${{ matrix.platform }}.exe
            else
              echo "Windows build artifact not found"
            fi
          else
            # For other platforms (Linux, macOS), rename without extension
            if [[ -f target/release/phira-mp-server ]]; then
              mv target/release/phira-mp-server build_output/${{ matrix.platform }}/phira-mp-server-${{ matrix.platform }}
            else
              echo "Build artifact not found for ${matrix.platform}"
            fi
          fi

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create GitHub Release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build_output/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag the release
        run: |
          git tag ${{ github.event.inputs.release_tag }}
          git push origin ${{ github.event.inputs.release_tag }}
