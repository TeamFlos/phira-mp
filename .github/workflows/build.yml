name: Cross-Compile and Release

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release Tag'
        required: false
        default: 'v1.0.0'

jobs:
  build_windows:
    name: Build for Windows
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build project for Windows
        run: |
          cargo build --release -p phira-mp-server --target x86_64-pc-windows-msvc

      - name: Archive build artifact
        run: |
          mkdir -p build_output/windows-amd64
          cp target/x86_64-pc-windows-msvc/release/phira-mp-server.exe build_output/windows-amd64/

      - name: Rename Artifact
        run: |
          mv build_output/windows-amd64/phira-mp-server.exe build_output/windows-amd64/phira-mp-server-windows-amd64.exe

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-amd64-artifact
          path: build_output/windows-amd64/phira-mp-server-windows-amd64.exe

  build_linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build project for Linux
        run: |
          cargo build --release -p phira-mp-server

      - name: Archive build artifact
        run: |
          mkdir -p build_output/linux-amd64
          cp target/release/phira-mp-server build_output/linux-amd64/

      - name: Rename Artifact
        run: |
          mv build_output/linux-amd64/phira-mp-server build_output/linux-amd64/phira-mp-server-linux-amd64

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-amd64-artifact
          path: build_output/linux-amd64/phira-mp-server-linux-amd64

  build_freebsd:
    name: Build for FreeBSD
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Install cross
        run: |
          cargo install cross

      - name: Build project for FreeBSD
        run: |
          cross build --release -p phira-mp-server --target x86_64-unknown-freebsd

      - name: Archive build artifact
        run: |
          mkdir -p build_output/freebsd-amd64
          cp target/x86_64-unknown-freebsd/release/phira-mp-server build_output/freebsd-amd64/

      - name: Rename Artifact
        run: |
          mv build_output/freebsd-amd64/phira-mp-server build_output/freebsd-amd64/phira-mp-server-freebsd-amd64

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: freebsd-amd64-artifact
          path: build_output/freebsd-amd64/phira-mp-server-freebsd-amd64

  build_aarch64:
    name: Build for aarch64
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build project for aarch64
        uses: uraimo/run-on-arch-action@v2
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu22.04
          githubToken: ${{ github.token }}
          run: |
            cargo build --release -p phira-mp-server

      - name: Archive build artifact
        run: |
          mkdir -p build_output/aarch64
          cp target/aarch64-unknown-linux-gnu/release/phira-mp-server build_output/aarch64/

      - name: Rename Artifact
        run: |
          mv build_output/aarch64/phira-mp-server build_output/aarch64/phira-mp-server-aarch64

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: aarch64-artifact
          path: build_output/aarch64/phira-mp-server-aarch64

  publish:
    permissions: write-all
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.release_tag }}
    needs: [build_windows, build_linux, build_freebsd, build_aarch64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin/
          merge-multiple: true

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        if: ${{ success() }}
        with:
          tag_name: ${{ github.event.inputs.release_tag }}
          files: bin/*
          prerelease: false
